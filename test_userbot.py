#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Telegram userbot —Å –ò–ò –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º
"""
import asyncio
import os
from dotenv import load_dotenv
from utils.logger import app_logger
from src.ai.consultant import AmberAIConsultant


async def test_ai_consultant():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –±–µ–∑ Telegram"""
    
    app_logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ —è–Ω—Ç–∞—Ä–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ò–ò –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞
    ai_consultant = AmberAIConsultant()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    test_messages = [
        "–ü—Ä–∏–≤–µ—Ç! –•–æ—á—É –∫—É–ø–∏—Ç—å —è–Ω—Ç–∞—Ä–Ω—ã–µ —Å–µ—Ä—å–≥–∏",
        "–ö–∞–∫–∏–µ —É –≤–∞—Å –µ—Å—Ç—å –∫–æ–ª—å—Ü–∞ —Å —è–Ω—Ç–∞—Ä–µ–º?",
        "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Ü–µ–ª–µ–±–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤–∞—Ö —è–Ω—Ç–∞—Ä—è",
        "–£ –º–µ–Ω—è –±—é–¥–∂–µ—Ç 5000 —Ä—É–±–ª–µ–π, —á—Ç–æ –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å?",
        "–•–æ—á—É –≤–µ—Ä–Ω—É—Ç—å –ø–æ–∫—É–ø–∫—É, –∫–∞—á–µ—Å—Ç–≤–æ –Ω–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç!",
        "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —É–∫—Ä–∞—à–µ–Ω–∏—è —Å –Ω–∞—Å–µ–∫–æ–º—ã–º–∏ –≤–Ω—É—Ç—Ä–∏?"
    ]
    
    app_logger.info(f"–ó–∞–ø—É—Å–∫ {len(test_messages)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤...")
    print("=" * 80)
    
    for i, message in enumerate(test_messages, 1):
        print(f"\nüó£ –ö–õ–ò–ï–ù–¢ #{i}: {message}")
        print("-" * 50)
        
        try:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ò–ò
            response = await ai_consultant.process_message(message)
            
            print(f"ü§ñ –ö–û–ù–°–£–õ–¨–¢–ê–ù–¢: {response}")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —ç—Å–∫–∞–ª–∞—Ü–∏–∏
            should_escalate = ai_consultant.should_escalate(message, response)
            if should_escalate:
                print("üîÑ –≠–°–ö–ê–õ–ê–¶–ò–Ø: –ö–ª–∏–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω –∂–∏–≤–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É")
            
            print("=" * 80)
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            await asyncio.sleep(1)
            
        except Exception as e:
            app_logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è #{i}: {e}")
            print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
    
    app_logger.info("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")


async def test_telegram_integration():
    """–ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å Telegram (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è)"""
    
    app_logger.info("üì± –ò–º–∏—Ç–∞—Ü–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram")
    
    try:
        from src.bot.telegram_client import AmberTelegramClient
        
        # –ü–æ–ª—É—á–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ .env
        api_id = int(os.getenv("TELEGRAM_API_ID"))
        api_hash = os.getenv("TELEGRAM_API_HASH")
        
        app_logger.info(f"Telegram API ID: {api_id}")
        app_logger.info(f"Telegram API Hash: {api_hash[:8]}...")
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç (–±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram)
        telegram_client = AmberTelegramClient(api_id, api_hash, session_name='test_session')
        app_logger.info("‚úÖ Telegram –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        print("\nüì± TELEGRAM INTEGRATION TEST:")
        print("‚úÖ API credentials –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
        print("‚úÖ AmberTelegramClient –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print("‚úÖ –ú–µ—Ç–æ–¥—ã send_message –∏ handle_message –≥–æ—Ç–æ–≤—ã")
        print("‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Telegram")
        
    except Exception as e:
        app_logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        print(f"‚ùå TELEGRAM ERROR: {e}")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üî∂" * 20 + " –¢–ï–°–¢ USERBOT " + "üî∂" * 20)
    print()
    
    # –¢–µ—Å—Ç 1: –ò–ò –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç
    await test_ai_consultant()
    
    print("\n" + "=" * 80)
    print()
    
    # –¢–µ—Å—Ç 2: Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
    await test_telegram_integration()
    
    print("\n" + "üî∂" * 60)
    print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´!")
    print("\nüìã –î–õ–Ø –ü–û–õ–ù–û–ì–û –ó–ê–ü–£–°–ö–ê:")
    print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSH –∫–ª—é—á –¥–ª—è GitHub")
    print("2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: source venv/bin/activate")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python main.py")
    print("4. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ Telegram –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ")
    print("\nüí¨ –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è!")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –¢–µ—Å—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        exit(1)